name: The New Yorker Magazine
run-name: 'The New Yorker Magazine: ${{ github.ref_name }}'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1'
    - cron: '0 12 * * 1'
    - cron: '0 18 * * 1'
jobs:
  worker:
    runs-on: ubuntu-latest
    env:
      output: converted_ebooks
      publisher: plsy1.github.io
      author: y1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        if: ${{ success() }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Calibre
        if: ${{ success() }}
        run: |
          sudo apt-get update
          sudo apt-get install libegl1 libopengl0 libxcb-cursor0
          url=https://download.calibre-ebook.com/linux-installer.sh
          sudo -v && wget -nv -O- $url | sudo sh /dev/stdin

      - name: Converting Ebook
        run: |
          mkdir -p $output
          convert_ebook() {
            recipe_name="The New Yorker Magazine"
            recipe_path="${recipe_name}.recipe"
            echo "Converting \"$recipe_path\"..."
            ebook_name="${recipe_path%.*}"

            # Convert to EPUB
            epub_path="$ebook_name.epub"
            echo "Converting \"$recipe_path\" > \"$epub_path\"..."
            convert_output=$(ebook-convert "$recipe_path" "$epub_path")

            # Extract cover image
            cover_image="${output}/cover.jpg"
            ebook-meta "$epub_path" --get-cover="$cover_image"
            echo "Cover extracted and saved to $cover_image"

            # Rename EPUB
            #title=$(ebook-meta "$epub_path" | grep '^Title *:' | sed 's/^Title *: *\(.*\)/\1/')
            title=$(echo "$convert_output" | grep -oP 'magazine/\K\d{4} \d{2} \d{2}' | sed 's/ //g')
            echo "DATE=$title" >> $GITHUB_ENV
            
            new_epub_path="${output}/${title}.epub"
            mv "$epub_path" "$new_epub_path"

            # Convert to PDF
            epub_file="${output}/${title}.epub"
            pdf_path="${output}/${title}.pdf"
            echo "Converting \"$epub_file\" to PDF > \"$pdf_path\"..."
            ebook-convert "$epub_file" "$pdf_path"
          }

          convert_ebook

      - name: Upload output directory as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DATE }}
          path: converted_ebooks


      - name: Push to 'magzines' branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin magzines
          git checkout magzines
          mkdir -p the_new_yorker

          if [ -d "the_new_yorker/$DATE" ]; then
            echo "Directory the_new_yorker/$DATE already exists, stop."
            exit 0
          else
            mv $output the_new_yorker/$DATE
            echo "Moved $output to the_new_yorker/$DATE"
          fi
          git add the_new_yorker/*
          if [[ $(git diff --cached --quiet || echo "changes") == "changes" ]]; then
            git commit -m "Update The New Yorker Magazine"
            git push origin magzines
          else
            echo "No changes to push."
          fi
        
